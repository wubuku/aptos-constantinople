// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosconstantinopledemo.aptos.contract.service;

import com.github.wubuku.aptos.utils.NodeApiClient;
import org.test.aptosconstantinopledemo.domain.*;
import org.test.aptosconstantinopledemo.domain.encounter.*;
import org.test.aptosconstantinopledemo.aptos.contract.repository.*;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.stream.*;
import java.util.*;
import java.math.*;

@Service
public class AptosEncounterService {

    @Autowired
    private EncounterStateRepository encounterStateRepository;


    private AptosEncounterStateRetriever aptosEncounterStateRetriever;

    @Autowired
    public AptosEncounterService(
        @Value("${aptos.contract.address}")
        String aptosContractAddress,
        NodeApiClient aptosNodeApiClient,
        AptosAccountRepository aptosAccountRepository
    ) {
        this.aptosEncounterStateRetriever = new AptosEncounterStateRetriever(
                aptosNodeApiClient,
                aptosContractAddress,
                aptosAccountRepository,
                playerId -> {
                    EncounterState.MutableEncounterState s = new AbstractEncounterState.SimpleEncounterState();
                    s.setPlayerId(playerId);
                    return s;
                }
        );
    }

    @Transactional
    public void updateEncounterState(String playerId) {
        EncounterState encounterState = aptosEncounterStateRetriever.retrieveEncounterState(playerId);
        if (encounterState == null) {
            return;
        }
        encounterStateRepository.merge(encounterState);
    }

    @Transactional
    public void deleteEncounter(String playerId) {
        EncounterState.MutableEncounterState s = (EncounterState.MutableEncounterState) encounterStateRepository.get(playerId, true);
        if (s != null) {
            s.setDeleted(true);
            encounterStateRepository.merge(s);
        }
    }

}

