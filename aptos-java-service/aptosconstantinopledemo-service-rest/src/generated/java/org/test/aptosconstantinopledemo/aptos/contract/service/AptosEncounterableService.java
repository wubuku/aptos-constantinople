// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosconstantinopledemo.aptos.contract.service;

import com.github.wubuku.aptos.utils.NodeApiClient;
import org.test.aptosconstantinopledemo.domain.*;
import org.test.aptosconstantinopledemo.domain.encounterable.*;
import org.test.aptosconstantinopledemo.aptos.contract.repository.*;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.stream.*;
import java.util.*;
import java.math.*;

@Service
public class AptosEncounterableService {

    @Autowired
    private EncounterableStateRepository encounterableStateRepository;


    private AptosEncounterableStateRetriever aptosEncounterableStateRetriever;

    @Autowired
    public AptosEncounterableService(
        @Value("${aptos.contract.address}")
        String aptosContractAddress,
        NodeApiClient aptosNodeApiClient,
        AptosAccountRepository aptosAccountRepository
    ) {
        this.aptosEncounterableStateRetriever = new AptosEncounterableStateRetriever(
                aptosNodeApiClient,
                aptosContractAddress,
                aptosAccountRepository,
                playerId -> {
                    EncounterableState.MutableEncounterableState s = new AbstractEncounterableState.SimpleEncounterableState();
                    s.setPlayerId(playerId);
                    return s;
                }
        );
    }

    @Transactional
    public void updateEncounterableState(String playerId) {
        EncounterableState encounterableState = aptosEncounterableStateRetriever.retrieveEncounterableState(playerId);
        if (encounterableState == null) {
            return;
        }
        encounterableStateRepository.merge(encounterableState);
    }

}

