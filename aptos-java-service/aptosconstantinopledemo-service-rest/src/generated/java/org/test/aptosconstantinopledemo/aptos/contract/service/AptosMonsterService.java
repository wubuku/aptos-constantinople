// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosconstantinopledemo.aptos.contract.service;

import com.github.wubuku.aptos.utils.NodeApiClient;
import org.test.aptosconstantinopledemo.domain.*;
import org.test.aptosconstantinopledemo.domain.monster.*;
import org.test.aptosconstantinopledemo.aptos.contract.repository.*;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.stream.*;
import java.util.*;
import java.math.*;

@Service
public class AptosMonsterService {

    @Autowired
    private MonsterStateRepository monsterStateRepository;


    private AptosMonsterStateRetriever aptosMonsterStateRetriever;

    @Autowired
    public AptosMonsterService(
        @Value("${aptos.contract.address}")
        String aptosContractAddress,
        NodeApiClient aptosNodeApiClient,
        AptosAccountRepository aptosAccountRepository
    ) {
        this.aptosMonsterStateRetriever = new AptosMonsterStateRetriever(
                aptosNodeApiClient,
                aptosContractAddress,
                aptosAccountRepository,
                monsterId -> {
                    MonsterState.MutableMonsterState s = new AbstractMonsterState.SimpleMonsterState();
                    s.setMonsterId(monsterId);
                    return s;
                }
        );
    }

    @Transactional
    public void updateMonsterState(String monsterId) {
        MonsterState monsterState = aptosMonsterStateRetriever.retrieveMonsterState(monsterId);
        if (monsterState == null) {
            return;
        }
        monsterStateRepository.merge(monsterState);
    }

    @Transactional
    public void deleteMonster(String monsterId) {
        MonsterState.MutableMonsterState s = (MonsterState.MutableMonsterState) monsterStateRepository.get(monsterId, true);
        if (s != null) {
            s.setDeleted(true);
            monsterStateRepository.merge(s);
        }
    }

}

