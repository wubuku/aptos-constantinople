// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosconstantinopledemo.domain.randomseed;

import java.util.*;
import java.math.BigInteger;
import java.util.Date;
import org.test.aptosconstantinopledemo.domain.*;
import org.test.aptosconstantinopledemo.specialization.*;

public abstract class AbstractRandomSeedAggregate extends AbstractAggregate implements RandomSeedAggregate {
    private RandomSeedState.MutableRandomSeedState state;

    private List<Event> changes = new ArrayList<Event>();

    public AbstractRandomSeedAggregate(RandomSeedState state) {
        this.state = (RandomSeedState.MutableRandomSeedState)state;
    }

    public RandomSeedState getState() {
        return this.state;
    }

    public List<Event> getChanges() {
        return this.changes;
    }

    public void throwOnInvalidStateTransition(Command c) {
        RandomSeedCommand.throwOnInvalidStateTransition(this.state, c);
    }

    protected void apply(Event e) {
        onApplying(e);
        state.mutate(e);
        changes.add(e);
    }


    ////////////////////////

    public static class SimpleRandomSeedAggregate extends AbstractRandomSeedAggregate {
        public SimpleRandomSeedAggregate(RandomSeedState state) {
            super(state);
        }

        @Override
        public void update(BigInteger value, Long offChainVersion, String commandId, String requesterId, RandomSeedCommands.Update c) {
            try {
                verifyUpdate(value, c);
            } catch (Exception ex) {
                throw new DomainError("VerificationFailed", ex);
            }

            Event e = newRandomSeedUpdated(value, offChainVersion, commandId, requesterId);
            apply(e);
        }

        protected void verify__Init__(RandomSeedCommands.__Init__ c) {

            ReflectUtils.invokeStaticMethod(
                    "org.test.aptosconstantinopledemo.domain.randomseed.__Init__Logic",
                    "verify",
                    new Class[]{RandomSeedState.class, VerificationContext.class},
                    new Object[]{getState(), VerificationContext.forCommand(c)}
            );

//package org.test.aptosconstantinopledemo.domain.randomseed;
//
//public class __Init__Logic {
//    public static void verify(RandomSeedState randomSeedState, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected void verifyUpdate(BigInteger value, RandomSeedCommands.Update c) {
            BigInteger Value = value;

            ReflectUtils.invokeStaticMethod(
                    "org.test.aptosconstantinopledemo.domain.randomseed.UpdateLogic",
                    "verify",
                    new Class[]{RandomSeedState.class, BigInteger.class, VerificationContext.class},
                    new Object[]{getState(), value, VerificationContext.forCommand(c)}
            );

//package org.test.aptosconstantinopledemo.domain.randomseed;
//
//public class UpdateLogic {
//    public static void verify(RandomSeedState randomSeedState, BigInteger value, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected AbstractRandomSeedEvent.RandomSeedInitialized newRandomSeedInitialized(Long offChainVersion, String commandId, String requesterId) {
            RandomSeedEventId eventId = new RandomSeedEventId(getState().getAccountAddress(), null);
            AbstractRandomSeedEvent.RandomSeedInitialized e = new AbstractRandomSeedEvent.RandomSeedInitialized();

            e.setAptosEventVersion(null); // todo Need to update 'verify' method to return event properties.
            e.setAptosEventSequenceNumber(null); // todo Need to update 'verify' method to return event properties.
            e.setAptosEventType(null); // todo Need to update 'verify' method to return event properties.
            e.setAptosEventGuid(null); // todo Need to update 'verify' method to return event properties.
            e.setStatus(null); // todo Need to update 'verify' method to return event properties.

            e.setCommandId(commandId);
            e.setCreatedBy(requesterId);
            e.setCreatedAt((java.util.Date)ApplicationContext.current.getTimestampService().now(java.util.Date.class));

            e.setRandomSeedEventId(eventId);
            return e;
        }

        protected AbstractRandomSeedEvent.RandomSeedUpdated newRandomSeedUpdated(BigInteger value, Long offChainVersion, String commandId, String requesterId) {
            RandomSeedEventId eventId = new RandomSeedEventId(getState().getAccountAddress(), null);
            AbstractRandomSeedEvent.RandomSeedUpdated e = new AbstractRandomSeedEvent.RandomSeedUpdated();

            e.setValue(value);
            e.setAptosEventVersion(null); // todo Need to update 'verify' method to return event properties.
            e.setAptosEventSequenceNumber(null); // todo Need to update 'verify' method to return event properties.
            e.setAptosEventType(null); // todo Need to update 'verify' method to return event properties.
            e.setAptosEventGuid(null); // todo Need to update 'verify' method to return event properties.
            e.setStatus(null); // todo Need to update 'verify' method to return event properties.

            e.setCommandId(commandId);
            e.setCreatedBy(requesterId);
            e.setCreatedAt((java.util.Date)ApplicationContext.current.getTimestampService().now(java.util.Date.class));

            e.setRandomSeedEventId(eventId);
            return e;
        }

    }

}

