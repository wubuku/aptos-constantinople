// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosconstantinopledemo.domain.encountertrigger;

import java.util.*;
import org.test.aptosconstantinopledemo.domain.*;
import java.math.BigInteger;
import java.util.Date;
import org.test.aptosconstantinopledemo.domain.Command;
import org.test.aptosconstantinopledemo.specialization.DomainError;

public interface EncounterTriggerCommand extends Command {

    Position getPosition();

    void setPosition(Position position);

    Long getOffChainVersion();

    void setOffChainVersion(Long offChainVersion);

    static void throwOnInvalidStateTransition(EncounterTriggerState state, Command c) {
        if (state.getOffChainVersion() == null) {
            if (isCommandCreate((EncounterTriggerCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (state.getDeleted() != null && state.getDeleted()) {
            throw DomainError.named("zombie", "Can't do anything to deleted aggregate.");
        }
        if (isCommandCreate((EncounterTriggerCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCommandCreate(EncounterTriggerCommand c) {
        if (c.getOffChainVersion().equals(EncounterTriggerState.VERSION_NULL))
            return true;
        return false;
    }

}

